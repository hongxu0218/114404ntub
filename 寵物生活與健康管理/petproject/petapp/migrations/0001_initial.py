# Generated by Django 5.1.3 on 2025-05-26 09:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='寵物類型名稱')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='寵物代碼')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否啟用')),
            ],
            options={
                'verbose_name': '寵物類型',
                'verbose_name_plural': '寵物類型',
                'db_table': 'pet_types',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='服務名稱')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='服務代碼')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否啟用')),
            ],
            options={
                'verbose_name': '服務類型',
                'verbose_name_plural': '服務類型',
                'db_table': 'pet_service_types',
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(choices=[('dog', '狗'), ('cat', '貓'), ('other', '其他')], max_length=10)),
                ('breed', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('sterilization_status', models.CharField(choices=[('sterilized', '已絕育'), ('not_sterilized', '未絕育'), ('unknown', '未知')], max_length=20)),
                ('chip', models.CharField(blank=True, max_length=100, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', '公'), ('female', '母'), ('unknown', '未知')], max_length=10)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('feature', models.TextField(blank=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='pet_pictures/')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pets', to=settings.AUTH_USER_MODEL, verbose_name='飼主')),
            ],
        ),
        migrations.CreateModel(
            name='DailyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(choices=[('diet', '飲食習慣'), ('exercise', '運動習慣'), ('allergen', '過敏源'), ('other', '其他'), ('temperature', '體溫'), ('weight', '體重')], max_length=20)),
                ('content', models.TextField(blank=True)),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petapp.pet')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('owner', '飼主'), ('vet', '獸醫')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='手機號碼')),
                ('vet_license', models.FileField(blank=True, null=True, upload_to='vet_licenses/', verbose_name='獸醫證照')),
                ('vet_license_city', models.CharField(blank=True, max_length=20, null=True, verbose_name='執業執照縣市')),
                ('is_verified_vet', models.BooleanField(default=False, verbose_name='獸醫身分已驗證')),
                ('clinic_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='醫院／診所名稱')),
                ('clinic_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='醫院／診所地址')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField(auto_now_add=True, verbose_name='看診日期')),
                ('clinic_location', models.CharField(max_length=100, verbose_name='看診地點')),
                ('diagnosis', models.TextField(verbose_name='診斷結果')),
                ('treatment', models.TextField(verbose_name='治療內容')),
                ('notes', models.TextField(blank=True, verbose_name='備註')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petapp.pet', verbose_name='寵物')),
                ('vet', models.ForeignKey(limit_choices_to={'account_type': 'vet'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='petapp.profile', verbose_name='看診獸醫')),
            ],
        ),
        migrations.CreateModel(
            name='DewormRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='驅蟲品牌')),
                ('date', models.DateField(verbose_name='施打日期')),
                ('location', models.CharField(max_length=200, verbose_name='施打地點')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deworm_records', to='petapp.pet', verbose_name='寵物')),
                ('vet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='petapp.profile', verbose_name='施打醫師')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('pdf', models.FileField(upload_to='reports/')),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='petapp.pet')),
                ('vet', models.ForeignKey(limit_choices_to={'account_type': 'vet'}, on_delete=django.db.models.deletion.CASCADE, to='petapp.profile')),
            ],
        ),
        migrations.CreateModel(
            name='PetLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名稱')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='地址')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='電話')),
                ('website', models.TextField(blank=True, null=True, verbose_name='網站')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='城市')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='地區')),
                ('lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='緯度')),
                ('lon', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='經度')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='評分')),
                ('rating_count', models.IntegerField(blank=True, null=True, verbose_name='評分數量')),
                ('has_emergency', models.BooleanField(default=False, verbose_name='提供24小時急診')),
                ('business_hours', models.JSONField(blank=True, null=True, verbose_name='營業時間')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
                ('pet_types', models.ManyToManyField(blank=True, related_name='locations', to='petapp.pettype', verbose_name='支援寵物類型')),
                ('service_types', models.ManyToManyField(blank=True, related_name='locations', to='petapp.servicetype', verbose_name='服務類型')),
            ],
            options={
                'verbose_name': '寵物地點',
                'verbose_name_plural': '寵物地點',
                'db_table': 'pet_locations',
            },
        ),
        migrations.CreateModel(
            name='VaccineRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='疫苗品牌')),
                ('date', models.DateField(verbose_name='施打日期')),
                ('location', models.CharField(max_length=200, verbose_name='施打地點')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccine_records', to='petapp.pet', verbose_name='寵物')),
                ('vet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='petapp.profile', verbose_name='施打醫師')),
            ],
        ),
        migrations.CreateModel(
            name='VetAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='預約日期')),
                ('time', models.TimeField(verbose_name='預約時間')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='預約原因')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='飼主')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petapp.pet', verbose_name='預約寵物')),
                ('vet', models.ForeignKey(limit_choices_to={'account_type': 'vet'}, on_delete=django.db.models.deletion.CASCADE, to='petapp.profile', verbose_name='預約獸醫')),
            ],
        ),
        migrations.CreateModel(
            name='VetAvailableTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, '星期一'), (1, '星期二'), (2, '星期三'), (3, '星期四'), (4, '星期五'), (5, '星期六'), (6, '星期日')], verbose_name='星期')),
                ('time_slot', models.CharField(choices=[('morning', '早上'), ('afternoon', '下午'), ('evening', '晚上')], max_length=10, verbose_name='時段')),
                ('start_time', models.TimeField(verbose_name='看診開始時間')),
                ('end_time', models.TimeField(verbose_name='看診結束時間')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最後更新時間')),
                ('vet', models.ForeignKey(limit_choices_to={'account_type': 'vet'}, on_delete=django.db.models.deletion.CASCADE, to='petapp.profile', verbose_name='獸醫')),
            ],
            options={
                'verbose_name': '獸醫排班時段',
                'verbose_name_plural': '獸醫排班時段',
            },
        ),
        migrations.CreateModel(
            name='BusinessHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, '週一'), (1, '週二'), (2, '週三'), (3, '週四'), (4, '週五'), (5, '週六'), (6, '週日')], verbose_name='星期')),
                ('open_time', models.TimeField(blank=True, null=True, verbose_name='開始時間')),
                ('close_time', models.TimeField(blank=True, null=True, verbose_name='結束時間')),
                ('period_order', models.PositiveIntegerField(default=1, verbose_name='時段順序')),
                ('period_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='時段名稱')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_hours_detail', to='petapp.petlocation', verbose_name='地點')),
            ],
            options={
                'verbose_name': '營業時間',
                'verbose_name_plural': '營業時間',
                'db_table': 'pet_business_hours',
                'ordering': ['day_of_week', 'period_order'],
                'indexes': [models.Index(fields=['location', 'day_of_week'], name='business_hours_idx')],
                'unique_together': {('location', 'day_of_week', 'period_order')},
            },
        ),
        migrations.AddIndex(
            model_name='petlocation',
            index=models.Index(fields=['city', 'district'], name='city_district_idx'),
        ),
        migrations.AddIndex(
            model_name='petlocation',
            index=models.Index(fields=['has_emergency'], name='emergency_idx'),
        ),
        migrations.AddIndex(
            model_name='petlocation',
            index=models.Index(fields=['lat', 'lon'], name='location_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vetavailabletime',
            unique_together={('vet', 'weekday', 'time_slot')},
        ),
    ]
