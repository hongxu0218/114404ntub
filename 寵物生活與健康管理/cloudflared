# Cloudflare Tunnel 完整設定指南

## 🎯 目標
讓 `https://pawday114404.duckdns.org` 自動獲得 HTTPS，無需複雜設定

## 📋 前置準備
- ✅ 確保 Django 應用在 `localhost:8000` 運行
- ✅ 確保您有 Cloudflare 帳號（免費）

## 🚀 Step 1: 下載 cloudflared

### 在 PowerShell 中執行（以管理員身分）：
```powershell
# 下載 cloudflared
Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "C:\cloudflared.exe"

# 驗證下載成功
C:\cloudflared.exe --version
```

## 🔐 Step 2: 登入 Cloudflare

```powershell
# 登入您的 Cloudflare 帳號
C:\cloudflared.exe tunnel login
```

**這會開啟瀏覽器**，請：
1. 選擇您想要的網域（可以選任意網域，我們稍後會改）
2. 授權 cloudflared 存取

## 🔧 Step 3: 創建 Tunnel

```powershell
# 創建名為 pawday-tunnel 的 tunnel
C:\cloudflared.exe tunnel create pawday-tunnel
```

**成功後會顯示**：
```
Created tunnel pawday-tunnel with id: [長串ID]
```

## 🌐 Step 4: 設定 DNS 記錄

```powershell
# 將您的 DuckDNS 網域連接到 tunnel
C:\cloudflared.exe tunnel route dns pawday-tunnel pawday114404.duckdns.org
```

**注意**：這步驟會自動在 Cloudflare 中創建 DNS 記錄

## 📝 Step 5: 創建設定檔

### 找到設定檔位置：
```
C:\Users\[您的使用者名稱]\.cloudflared\
```

### 創建 `config.yml` 檔案：
在上述路徑中創建 `config.yml`，內容如下：

```yaml
tunnel: pawday-tunnel
credentials-file: C:\Users\[您的使用者名稱]\.cloudflared\[tunnel-id].json

ingress:
  - hostname: pawday114404.duckdns.org
    service: http://localhost:8000
  - service: http_status:404
```

**重要**：
- 將 `[您的使用者名稱]` 替換為實際的使用者名稱
- 將 `[tunnel-id]` 替換為 Step 3 顯示的實際 ID

## ⚡ Step 6: 啟動 Tunnel

```powershell
# 啟動 tunnel
C:\cloudflared.exe tunnel run pawday-tunnel
```

**成功後會顯示**：
```
2025-06-01T10:00:00Z INF Connection 0 connected
```

## 🐍 Step 7: 修改 Django 設定

### 更新 `settings.py`：
```python
# settings.py

# 允許的主機
ALLOWED_HOSTS = [
    'pawday114404.duckdns.org',
    '127.0.0.1',
    'localhost',
]

# Cloudflare Tunnel HTTPS 設定
SECURE_PROXY_SSL_HEADER = ('HTTP_CF_VISITOR', '{"scheme":"https"}')
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# allauth HTTPS 設定
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"

# 信任 Cloudflare IP
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True
```

## 🔄 Step 8: 重新啟動 Django

```powershell
# 在另一個 PowerShell 視窗中
cd "D:\您的專案路徑\petproject"
python manage.py runserver 0.0.0.0:8000
```

## ✅ Step 9: 測試 HTTPS

在瀏覽器中前往：
```
https://pawday114404.duckdns.org
```

**應該會看到**：
- 🔒 綠色鎖頭（安全連線）
- ⚡ 更快的載入速度
- 🛡️ Cloudflare 保護

---

## 🔧 設定開機自動啟動

### 方法 1: 安裝為 Windows 服務
```powershell
# 以管理員身分執行
C:\cloudflared.exe service install
```

### 方法 2: 創建啟動腳本
創建 `start_pawday.bat`：
```batch
@echo off
start "Django" cmd /k "cd /d D:\您的專案路徑\petproject && python manage.py runserver 0.0.0.0:8000"
start "Cloudflare Tunnel" cmd /k "C:\cloudflared.exe tunnel run pawday-tunnel"
```

---

## 🆘 故障排除

### 問題 1: tunnel 無法連接
```powershell
# 檢查設定檔
type C:\Users\%USERNAME%\.cloudflared\config.yml

# 檢查 tunnel 狀態
C:\cloudflared.exe tunnel list
```

### 問題 2: Django 500 錯誤
檢查 `ALLOWED_HOSTS` 設定：
```python
ALLOWED_HOSTS = [
    'pawday114404.duckdns.org',  # 確保包含這個
    '127.0.0.1',
    'localhost',
]
```

### 問題 3: 靜態檔案無法載入
```python
# settings.py
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# 執行
python manage.py collectstatic
```

### 問題 4: 檢查 tunnel 日誌
```powershell
# 查看詳細日誌
C:\cloudflared.exe tunnel run pawday-tunnel --loglevel debug
```

---

## 🎉 完成檢查清單

完成後，您應該能夠：
- [ ] 訪問 `https://pawday114404.duckdns.org` 
- [ ] 看到綠色鎖頭 🔒
- [ ] Django Admin 正常運作
- [ ] 靜態檔案正常載入
- [ ] Google 登入功能正常
- [ ] 寵物資料正常顯示

---

## 💡 優點總結

✅ **完全免費** - Cloudflare Tunnel 免費  
✅ **自動 SSL** - 無需手動設定證書  
✅ **自動更新** - SSL 證書自動續期  
✅ **無需開 port** - 不需要設定路由器  
✅ **DDoS 防護** - Cloudflare 自動防護  
✅ **CDN 加速** - 全球節點加速  
✅ **簡單維護** - 設定一次即可  

您的寵物醫療系統現在將擁有企業級的安全性和效能！🚀
